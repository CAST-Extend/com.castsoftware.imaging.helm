apiVersion: v1
kind: Service
metadata:
  labels:
    console.service: console-control-panel
  name: console-control-panel
  namespace: {{ .Release.Namespace }}  
spec:
  ports:
    - name: "2381"
      port: 2381
      targetPort: 2381
    - name: "8098"
      port: 8098
      targetPort: 8098
  selector:
    console.service: console-control-panel
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    console.service: console-control-panel
    version: {{ .Values.ConsoleControlPaneImage.tag| default .Values.version }}
  name: console-control-panel
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.ControlPaneReplicaCount }}
  selector:
    matchLabels:
      console.service: console-control-panel
  strategy: {}
  template:
    metadata:
      labels:
        console.network/aip-network: "true"
        console.service: console-control-panel
    spec:
      initContainers:
      - name: wait-for-postgres
        image: {{ .Values.InitUtilImage.name }}:{{ .Values.InitUtilImage.tag }}
        imagePullPolicy: "{{ .Values.InitUtilImage.pullPolicy }}"
        command:
        - /bin/sh
        - -c
        - |
{{- if .Values.CustomPostgres.enable }}
          until pg_isready -h {{ .Values.CustomPostgres.host }} -p {{ .Values.CustomPostgres.port }}; do echo waiting for postgres...; sleep 2; done; echo postgres is ready!
{{- else }}
          until pg_isready -h console-postgres.{{ .Release.Namespace }}.svc.cluster.local -p 2285; do echo waiting for postgres...; sleep 2; done; echo postgres is ready!
{{- end }}
      - name: postgres-scripts
        image: {{ .Values.InitUtilImage.name }}:{{ .Values.InitUtilImage.tag }}
        imagePullPolicy: "{{ .Values.InitUtilImage.pullPolicy }}"
        env:
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                name: imaging-pwd-sec
                key: operator-db-password
        command:
        - /bin/sh
        - -c
        - |
          echo "Running context URL updates..."
          sleep 30
{{- if .Values.CustomPostgres.enable }}
          psql -h {{ .Values.CustomPostgres.host }} -p {{ .Values.CustomPostgres.port }} -U operator -d postgres -f /home/imaging/sql/contexturl-controlpanel-update-script.sql
          psql -h {{ .Values.CustomPostgres.host }} -p {{ .Values.CustomPostgres.port }} -U operator -d keycloak -f /home/imaging/sql/contexturl-keycloak-update-script.sql
{{- else }}
          psql -h console-postgres.{{ .Release.Namespace }}.svc.cluster.local -p 2285 -U operator -d postgres -f /home/imaging/sql/contexturl-controlpanel-update-script.sql
          psql -h console-postgres.{{ .Release.Namespace }}.svc.cluster.local -p 2285 -U operator -d keycloak -f /home/imaging/sql/contexturl-keycloak-update-script.sql
{{- end }}
          echo "Done."
        volumeMounts:
          - name: contexturl-controlpanel-update-script
            mountPath: /home/imaging/sql/contexturl-controlpanel-update-script.sql
            subPath: contexturl-controlpanel-update-script.sql
          - name: contexturl-keycloak-update-script
            mountPath: /home/imaging/sql/contexturl-keycloak-update-script.sql
            subPath: contexturl-keycloak-update-script.sql 
      containers:
        - env:
            - name: HOST_AUTH_SERVICE
              value: console-authentication-service.{{ .Release.Namespace }}.svc.cluster.local
            - name: PORT_AUTH_SERVICE
              value: "8092"
            - name: HOST_CONTROL_PANEL
              value: console-control-panel.{{ .Release.Namespace }}.svc.cluster.local
            - name: PORT_CONTROL_PANEL
              value: "8098"
{{- if .Values.CustomPostgres.enable }}
            - name: DB_HOST
              value: {{ .Values.CustomPostgres.host }}
            - name: DB_PORT
              value: "{{ .Values.CustomPostgres.port }}"               
{{- else }}
            - name: DB_HOST
              value: console-postgres.{{ .Release.Namespace }}.svc.cluster.local
            - name: DB_PORT
              value: "2285"              
{{- end }}
            - name: DB_ENCRYPTED_PASSWORD
              value: "{{ .Values.OperatorDbPasswordCrypted2 }}"
            - name: HOST_CONSOLE
              value: console-service.{{ .Release.Namespace }}.svc.cluster.local
            - name: PORT_CONSOLE
              value: "8091" 
            - name: DELIVERY_FOLDER
              value: {{ .Values.anadir.delivery }}
            - name: DEPLOY_FOLDER
              value: {{ .Values.anadir.deploy }}
            - name: SHARED_FOLDER
              value: {{ .Values.anadir.common }}
{{- if .Values.ContextUrl.enable }}
            - name: PUBLIC_URL
              value: {{ .Values.FrontEndHost }}{{ .Values.ContextUrl.appcontext }}/   # Should end with "/"
{{- end }} 
          image: "{{ .Values.ConsoleControlPaneImage.name }}:{{ .Values.ConsoleControlPaneImage.tag}}"
          imagePullPolicy: "{{ .Values.ConsoleControlPaneImage.pullPolicy }}"
          livenessProbe:
            exec:
              command:
                - curl
                - -f
                - http://localhost:8098/actuator/health
            failureThreshold: 15
            periodSeconds: 20
            timeoutSeconds: 10
          name: console-control-panel
          ports:
            - containerPort: 2381
              protocol: TCP
            - containerPort: 8098
              protocol: TCP
          resources:
            {{- toYaml .Values.ControlPanelResources | nindent 12 }}
      restartPolicy: Always
      volumes:
        - name: contexturl-controlpanel-update-script
          configMap:
            name: contexturl-controlpanel-update-script
        - name: contexturl-keycloak-update-script
          configMap:
            name: contexturl-keycloak-update-script
{{- if .Values.UseImagePullSecrets }}       
      imagePullSecrets:
        - name: imagepull-sec  
{{- end }}        