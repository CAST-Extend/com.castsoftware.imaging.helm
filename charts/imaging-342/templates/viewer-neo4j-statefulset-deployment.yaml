apiVersion: v1
kind: Service
metadata:
  name: viewer-neo4j
  labels:
    app: viewer-neo4j
    component: core
spec:
  ports:
    - port: 7474
      targetPort: 7474
      name: browser
    - port: 7687
      targetPort: 7687
      name: bolt
    - port: 6362
      targetPort: 6362
      name: backup
  selector:
    app: viewer-neo4j
    component: core
---
apiVersion: "apps/v1"
kind: StatefulSet
metadata:
  name: viewer-neo4j-core
  namespace: {{.Release.Namespace}}
spec:
  serviceName: viewer-neo4j
  replicas: {{.Values.ViewerNeo4jReplicaCount}}
  selector:
    matchLabels:
      app: viewer-neo4j
  template:
    metadata:
      labels:
        app: viewer-neo4j
        component: core
    spec:
      securityContext:
        fsGroup: 7474   
      containers:
        - name: viewer-neo4j
          image: "{{.Values.ViewerNeo4jImage.name}}:{{.Values.ViewerNeo4jImage.tag}}"
          imagePullPolicy: "{{.Values.ViewerNeo4jImage.pullPolicy}}"
          command: ['sh', '-c', "/var/lib/neo4j/config/init.sh"]
          env:
            - name: NEO4J_ACCEPT_LICENSE_AGREEMENT
              value: "yes"
            - name: NEO4J_dbms_memory_heap_maxSize
              value: "8G"
            - name: TZ
              value: "UTC"
          ports:
            - containerPort: 7474
              name: browser
            - containerPort: 7687
              name: bolt
            - containerPort: 6362
              name: backup
          resources:
            {{- toYaml .Values.ViewerNeo4jResources | nindent 12 }}
          volumeMounts:
            - name: neo4jdata
              mountPath: /logs
              subPathExpr: logs
            - name: neo4jdata
              mountPath: /var/lib/neo4j/config/neo4j5_data
              subPathExpr: neo4jdata
            - name: neo4jdata
              mountPath: /var/lib/neo4j/config/configuration 
              subPathExpr: neo4jconfigfolder             
            - name: neo4jconf
              mountPath: /var/lib/neo4j/config/configuration/neo4j.conf
              subPath: neo4j.conf
            - name: apocconf
              mountPath: /var/lib/neo4j/config/configuration/apoc.conf
              subPath: apoc.conf
{{- if .Values.UseImagePullSecrets }}              
      imagePullSecrets:
        - name: imagepull-sec
{{- end }}        
      volumes:
        - name: neo4jconf
          configMap:
            name: neo4jconf
        - name: apocconf
          configMap:
            name: neo4japocconf
  volumeClaimTemplates:
    - metadata:
        name: neo4jdata
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: "{{ .Values.DiskClassName }}"
        resources:
          requests:
            storage: "{{ .Values.size_neo4jdata }}"
