apiVersion: v1
kind: Service
metadata:
  name: console-analysis-node
  labels:
    console.service: console-analysis-node
    component: core
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: "8099"
      port: 8099
      targetPort: 8099
  selector:
    console.service: console-analysis-node  
    component: core
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    console.service: console-analysis-node
    version: {{ .Values.ConsoleAnalysisNodeImage.tag| default .Values.version }}
  name: console-analysis-node-core
  namespace: {{ .Release.Namespace }}   
spec:
  replicas: {{ .Values.AnalysisNodeReplicaCount }}
  selector:
    matchLabels:
      console.service: console-analysis-node
  template:
    metadata:
      labels:
        console.network/aip-network: "true"
        console.service: console-analysis-node
        component: core
    spec:
      securityContext:
        fsGroup: 10001
      initContainers:     
        - name: init-folders-services-healthcheck
          image: {{ .Values.InitUtilImage.name }}:{{ .Values.InitUtilImage.tag }}
          imagePullPolicy: "{{ .Values.InitUtilImage.pullPolicy }}"
          command:
          - /bin/sh
          - -c
          - |
            echo "Create folders."
            mkdir -p {{ .Values.anadir.common }}
            mkdir -p {{ .Values.anadir.delivery }}
            mkdir -p {{ .Values.anadir.deploy }}
            mkdir -p {{ .Values.anadir.extensions }}     
            echo "Services healthcheck."
            until curl -s http://console-control-panel.{{ .Release.Namespace }}.svc.cluster.local:8098/actuator/health | grep -q '"status":"UP"'; do
              echo "Waiting for console-control-panel to be healthy..."
              sleep 2
            done
            echo "console-control-panel is healthy!"
            until curl -s http://console-authentication-service.{{ .Release.Namespace }}.svc.cluster.local:8092/actuator/health | grep -q '"status":"UP"'; do
              echo "Waiting for console-authentication-service to be healthy..."
              sleep 2
            done            
            echo "console-authentication-service is healthy!"
            echo "Done."
          volumeMounts:
            - mountPath: {{ .Values.anadir.castdirmount }}
              name: castdir
            - mountPath: {{ .Values.anadir.datadirmount }}
              name: shared-datadir
        - name: postgres-upgrade
          image: {{ .Values.InitUtilImage.name }}:{{ .Values.InitUtilImage.tag }}
          imagePullPolicy: "{{ .Values.InitUtilImage.pullPolicy }}"
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: imaging-pwd-sec
                  key: operator-db-password
          command:
          - /bin/sh
          - -c
          - |
            echo "Running postgres upgrade..."
{{- if .Values.CustomPostgres.enable }}
            psql -h {{ .Values.CustomPostgres.host }} -p {{ .Values.CustomPostgres.port }} -U operator -d postgres -f /home/imaging/sql/analysisnode-upgrade-script.sql
{{- else }}
            psql -h console-postgres.{{ .Release.Namespace }}.svc.cluster.local -p 2285 -U operator -d postgres -f /home/imaging/sql/analysisnode-upgrade-script.sql
{{- end }}  
          volumeMounts:
            - name: analysisnode-upgrade-script
              mountPath: /home/imaging/sql/analysisnode-upgrade-script.sql
              subPath: analysisnode-upgrade-script.sql       
      containers:
        - env:
            - name: DELIVERY_FOLDER
              value: {{ .Values.anadir.delivery }}
            - name: DEPLOY_FOLDER
              value: {{ .Values.anadir.deploy }}
            - name: SHARED_FOLDER
              value: {{ .Values.anadir.common }}
            - name: SHARED_CAST_FOLDER
              value: {{ .Values.anadir.castdirmount }}
            - name: DELIVERY_VOLUME_MACHINE
              value: {{ .Values.anadir.delivery }}
            - name: DEPLOY_VOLUME_MACHINE
              value: {{ .Values.anadir.deploy }}
            - name: SHARED_VOLUME_MACHINE
              value: {{ .Values.anadir.common }}
            - name: SHARED_CAST_VOLUME_MACHINE
              value: {{ .Values.anadir.castdirmount }}     
            - name: LOGS_VOLUME_MACHINE
              value: {{ .Values.anadir.logs }}
            - name: ANDATA_VOLUME_MACHINE
              value: {{ .Values.anadir.lisa }}
            - name: CONSOLE_REGISTRY_URL
              value: http://console-control-panel.{{ .Release.Namespace }}.svc.cluster.local:8098
            - name: HOST_AUTH_SERVICE
              value: console-authentication-service.{{ .Release.Namespace }}.svc.cluster.local
            - name: PORT_AUTH_SERVICE
              value: "8092"
          image: "{{ .Values.ConsoleAnalysisNodeImage.name }}:{{ .Values.ConsoleAnalysisNodeImage.tag}}"
          imagePullPolicy: "{{ .Values.ConsoleAnalysisNodeImage.pullPolicy }}"
          name: console-analysis-node
          ports:
            - containerPort: 8099
              protocol: TCP
          resources:
            {{- toYaml .Values.AnalysisNodeResources | nindent 12 }}
          volumeMounts:
            - mountPath: {{ .Values.anadir.castdirmount }}
              name: castdir
            - mountPath: {{ .Values.anadir.datadirmount }}
              name: shared-datadir
            - name: dshm
              mountPath: /dev/shm   
      restartPolicy: Always 
{{- if .Values.UseImagePullSecrets }}      
      imagePullSecrets:
        - name: imagepull-sec 
{{- end }}         
      volumes:
        - name: shared-datadir
          persistentVolumeClaim:
            claimName: pvc-shared-datadir
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: {{ .Values.AnalysisNode_shmsize }}
        - name: analysisnode-upgrade-script
          configMap:
            name: analysisnode-upgrade-script                     
  volumeClaimTemplates:
    - metadata:
        name: castdir
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "{{ .Values.size_castdir }}"
        storageClassName: "{{ .Values.DiskClassName }}"            
