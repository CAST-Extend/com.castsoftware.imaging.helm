kind: Service
apiVersion: v1
metadata:
  name: viewer-etl
  labels:
    app: viewer-etl
spec:
  ports:
  - name: http
    port: 9001
    targetPort: 9001
  selector:
    app: viewer-etl
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: viewer-etl
    version: {{.Values.ViewerEtlImage.tag| default .Values.version}}
  name: viewer-etl
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.ViewerEtlReplicaCount }}
  selector:
    matchLabels:
      app: viewer-etl
  template:
    metadata:
      labels:
        app: viewer-etl
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:
        - name: neo4j-and-control-panel-healthcheck
          image: {{ .Values.InitUtilImage.name }}:{{ .Values.InitUtilImage.tag }}
          imagePullPolicy: "{{ .Values.InitUtilImage.pullPolicy }}"
          command:
          - /bin/sh
          - -c
          - |
            until curl -s http://console-control-panel.{{ .Release.Namespace }}.svc.cluster.local:8098/actuator/health | grep -q '"status":"UP"'; do
              echo "Waiting for console-control-panel to be healthy..."
              sleep 2
            done
            echo "console-control-panel is healthy!"  
            until wget --no-verbose --spider http://viewer-neo4j.{{ .Release.Namespace }}.svc.cluster.local:7474; do 
              echo "Waiting for neo4j..."
              sleep 2
            done
            echo "viewer-neo4j is up!"
            until curl -s http://viewer-server.{{ .Release.Namespace }}.svc.cluster.local:9000/healthcheck | grep -q "I am alive"; do
              echo "Waiting for viewer-server..."
              sleep 2
            done
            echo "viewer-server is up!"
            echo "Done."
      containers:
        - image: "{{ .Values.ViewerEtlImage.name }}:{{ .Values.ViewerEtlImage.tag}}"
          imagePullPolicy: "{{ .Values.ViewerEtlImage.pullPolicy }}"
          command: ['sh', '-c', '/opt/imaging/imaging-etl/config/init.sh']
          name: viewer-etl
          ports:
            - containerPort: 9001
              protocol: TCP
          resources:
            {{- toYaml .Values.ViewerEtlResources | nindent 12 }}
          volumeMounts:
            - name: logdir
              mountPath: /opt/imaging/imaging-etl/logs
              readOnly: false
            - name: etlappconfig
              mountPath: /opt/imaging/imaging-etl/config/app.config
              subPath: app.config
{{- if .Values.UseImagePullSecrets }}              
      imagePullSecrets:
        - name: imagepull-sec
{{- end }}        
      volumes:
        - name: logdir
          persistentVolumeClaim:
            claimName: pvc-imagingviewer-v3-etl-logs
        - name: etlappconfig
          configMap:
            name: etlappconfig