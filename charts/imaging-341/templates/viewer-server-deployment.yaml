kind: Service
apiVersion: v1
metadata:
  name: viewer-server
  labels:
    app: viewer-server
spec:
  ports:
    - name: http
      port: 8083
      targetPort: 8080
    - name: https
      port: 443
      targetPort: 443
    - name: login
      port: 9000
      targetPort: 9000
  selector:
    app: viewer-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: viewer-server
    version: {{.Values.ViewerServiceImage.tag| default .Values.version}}
  name: viewer-server
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.ViewerServerReplicaCount }}
  selector:
    matchLabels:
      app: viewer-server
  template:
    metadata:
      labels:
        app: viewer-server
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:      
        - name: neo4j-and-control-panel-healthcheck
          image: {{ .Values.InitUtilImage.name }}:{{ .Values.InitUtilImage.tag }}
          imagePullPolicy: "{{ .Values.InitUtilImage.pullPolicy }}"
          command:
          - /bin/sh
          - -c
          - |
            until curl -s http://console-control-panel.{{ .Release.Namespace }}.svc.cluster.local:8098/actuator/health | grep -q '"status":"UP"'; do
              echo "Waiting for console-control-panel to be healthy..."
              sleep 2
            done
            echo "console-control-panel is healthy!"  
            until wget --no-verbose --spider http://viewer-neo4j.{{ .Release.Namespace }}.svc.cluster.local:7474; do 
              echo "Waiting for neo4j..."
              sleep 2
            done
            echo "viewer-neo4j is up!"
        - name: neo4j-migration
          image: {{ .Values.InitUtilImage.name }}:{{ .Values.InitUtilImage.tag }}
          imagePullPolicy: "{{ .Values.InitUtilImage.pullPolicy }}"
          command:
          - /bin/sh
          - -c
          - |
            echo "Running neo4j migration..."
{{- if or (eq .Values.version "3.2.2") (eq .Values.version "3.2.3") }}
            /home/imaging/3.2.3/Neo4jdatamigrate --log /home/imaging/logs/3.2.3-Neo4jdatamigrate.log --database neo4j --all --migrate --silent --host viewer-neo4j.{{ .Release.Namespace }}.svc.cluster.local
            echo "******************** L O G **********************"
            cat /home/imaging/logs/3.2.3-Neo4jdatamigrate.log
            echo "*************************************************"
{{- end }}
{{- if or (eq .Values.version "3.3.0") (eq .Values.version "3.3.1") }}
            /home/imaging/3.3.0/Neo4jdatamigrate --log /home/imaging/logs/3.3.0-Neo4jdatamigrate.log --database neo4j --all --migrate --silent --host viewer-neo4j.{{ .Release.Namespace }}.svc.cluster.local
            echo "******************** L O G **********************"
            cat /home/imaging/logs/3.3.0-Neo4jdatamigrate.log
            echo "*************************************************"
{{- end }}
{{- if or (eq .Values.version "3.4.0") (eq .Values.version "3.4.1") }}
            /home/imaging/3.4.0/Neo4jdatamigrate --log /home/imaging/logs/3.4.0-Neo4jdatamigrate.log --database neo4j --all --migrate --silent --host viewer-neo4j.{{ .Release.Namespace }}.svc.cluster.local
            echo "******************** L O G **********************"
            cat /home/imaging/logs/3.4.0-Neo4jdatamigrate.log
            echo "*************************************************"
{{- end }}
            echo "Done".
          volumeMounts:
            - name: log
              mountPath: /home/imaging/logs            
      containers:
        - image: "{{ .Values.ViewerServiceImage.name }}:{{ .Values.ViewerServiceImage.tag}}"
          imagePullPolicy: "{{ .Values.ViewerServiceImage.pullPolicy }}"
          command: ['sh', '-c', "sleep 60; /opt/imaging/config/init.sh"]
          name: viewer-server
          env:
            - name: TIME_ZONE
              value: "Europe/Paris"
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 443
              protocol: TCP
            - containerPort: 9000
              protocol: TCP
          resources:
            {{- toYaml .Values.ViewerServerServiceResources | nindent 12 }}
          volumeMounts:
            - name: log
              mountPath: /opt/imaging/imaging-service/logs
            - name: servernginxconf
              mountPath: /opt/imaging/config/nginx/conf/nginx.conf
              subPath: nginx.conf
            - name: serverappconfig
              mountPath: /opt/imaging/config/app.config
              subPath: app.config
{{- if .Values.UseImagePullSecrets }}               
      imagePullSecrets:
        - name: imagepull-sec
{{- end }}        
      volumes:
        - name: log
          persistentVolumeClaim:
            claimName: pvc-imagingviewer-v3-server-log
        - name: servernginxconf
          configMap:
            name: servernginxconf
        - name: serverappconfig
          configMap:
            name: serverappconfig